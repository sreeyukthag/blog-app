version: '3.8'

services:
    postgres:
        image: postgres:latest
        container_name: redisCaching-postgres
        environment:
            POSTGRES_USER: admin
            POSTGRES_PASSWORD: admin
            POSTGRES_DB: redisCaching
        networks:
            - app-network

    redis:
        image: redis:latest
        container_name: redis-container
        networks:
            - app-network

    zookeeper:
        image: confluentinc/cp-zookeeper:7.5.0
        container_name: zookeeper
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        networks:
            - app-network

    kafka:
        image: confluentinc/cp-kafka:7.5.0
        container_name: kafka
        depends_on:
            - zookeeper
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            ALLOW_PLAINTEXT_LISTENER: yes
        networks:
            - app-network

    app:
        build: .
        container_name: redis-app
        depends_on:
            - kafka
            - postgres
            - redis
        ports:
            - "8080:8080"
        environment:
            SPRING_PROFILES_ACTIVE: docker
        networks:
            - app-network

networks:
    app-network:
        driver: bridge